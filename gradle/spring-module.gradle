apply plugin: 'java-library'
apply plugin: 'org.springframework.build.compile'
apply plugin: 'org.springframework.build.optional-dependencies'
// Uncomment the following for Shadow support in the jmhJar block.
// Currently commented out due to ZipException: archive is not a ZIP archive
// apply plugin: 'com.github.johnrengelman.shadow'
//apply plugin: 'me.champeau.jmh'
apply from: "$rootDir/gradle/publications.gradle"

//dependencies {
//	jmh 'org.openjdk.jmh:jmh-core:1.32'
//	jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.32'
//	jmh 'net.sf.jopt-simple:jopt-simple'
//}

//tasks.findByName("processJmhResources").configure {
//	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//}

jar {
	manifest.attributes["Implementation-Title"] = project.name
	manifest.attributes["Implementation-Version"] = project.version
	manifest.attributes["Automatic-Module-Name"] = project.name.replace('-', '.')  // for Jigsaw
	manifest.attributes["Created-By"] =
			"${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})"

	from("${rootDir}/src/docs/dist") {
		include "license.txt"
		include "notice.txt"
		into "META-INF"
		expand(copyright: new Date().format("yyyy"), version: project.version)
	}
}

normalization {
	runtimeClasspath {
		ignore "META-INF/MANIFEST.MF"
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
	// Don't include or exclude anything explicitly by default. See SPR-12085.
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			//from components.java
//			artifact sourcesJar
//			artifact javadocJar
		}
	}
}
